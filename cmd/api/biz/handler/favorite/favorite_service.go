// Code generated by hertz generator.

package favorite

import (
	"context"
	"fmt"

	"github.com/cloudwego/hertz/pkg/app"
	favoriteapi "github.com/simple/douyin/cmd/api/biz/model/favorite"
	"github.com/simple/douyin/cmd/api/biz/rpc"
	"github.com/simple/douyin/kitex_gen/favorite"
	"github.com/simple/douyin/pkg/errno"
)

// FavoriteAction .
// @router /douyin/favorite/action/ [POST]
func FavoriteAction(ctx context.Context, c *app.RequestContext) {
	fmt.Println("111111111111111111")
	var err error
	var req favoriteapi.FavoriteActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		SendResponse(c, errno.ConvertErr(err), nil)
		return
	}
	fmt.Println("api here, ready to invoke rpc")
	err = rpc.FavoriteAction(context.Background(), &favorite.FavoriteActionRequest{
		Token:      req.Token,
		VideoId:    req.VideoID,
		ActionType: req.ActionType,
	})
	if err != nil {
		SendResponse(c, errno.ConvertErr(err), nil)
		return
	}

	SendResponse(c, errno.Success, nil)
}

// FavoriteList .
// @router /douyin/favorite/list/ [GET]
func FavoriteList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req favorite.FavoriteListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		SendResponse(c, errno.ConvertErr(err), nil)
		return
	}
	videos, err := rpc.FavoriteList(context.Background(), &favorite.FavoriteListRequest{
		UserId: req.UserId,
		Token:  req.Token,
	})
	if err != nil {
		SendResponse(c, errno.ConvertErr(err), nil)
		return
	}
	SendResponse(c, errno.Success, videos)
}
